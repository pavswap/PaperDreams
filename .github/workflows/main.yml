name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pygame

      - name: Build executable (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          pyinstaller --onefile \
            --name PaperDreams \
            --add-data "PaperDreams/music:music" \
            --add-data "PaperDreams/graphics:graphics" \
            PaperDreams/extra2.py

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile `
            --name PaperDreams `
            --add-data "PaperDreams/music;music" `
            --add-data "PaperDreams/graphics;graphics" `
            PaperDreams/extra2.py

      # Package build per OS
      - name: Package build (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir dist_upload
          cd dist
          zip -r ../dist_upload/PaperDreams-${{ matrix.os }}.zip .

      - name: Package build (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist_upload
          Compress-Archive -Path dist\* -DestinationPath dist_upload\PaperDreams-${{ matrix.os }}.zip

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PaperDreams-${{ matrix.os }}
          path: dist_upload/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release_files

      - name: Create or update release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release_files/**/*
          tag_name: ${{ github.ref_name }}
          overwrite: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
